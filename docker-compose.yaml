services:
  match-engine:
    build:
      context: ./match-engine
      dockerfile: Dockerfile
    env_file: ./match-engine/environment-variables/.env
    ports:
      - "8080:8080"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/dartsy-mongo
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  authentication:
    build:
      context: ./authentication
      dockerfile: Dockerfile
    env_file: ./authentication/environment-variables/.env
    ports:
      - "8081:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/dartsy-mongo
    depends_on:
      - mongo
    networks:
      - app-network

  match-completion-service:
    build:
      context: ./match-completion-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/dartsy-mongo
    depends_on:
      - mongo
    networks:
      - app-network
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:80"
#    networks:
#      - app-network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8083:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - app-network

volumes:
  redis-data:
  mongo-data:

networks:
  app-network:
    driver: bridge